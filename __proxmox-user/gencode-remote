#!/bin/bash

generate_explorers() {
   comment="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $3}' | awk '{$1=$1};1')"
   email="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $4}' | awk '{print $1}')"
   enable="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $5}' | awk '{print $1}')"
   expire="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $6}' | awk '{print $1}')"
   firstname="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $7}' | awk '{$1=$1};1')"
   groups="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $8}' | awk '{$1=$1};1')"
   keys="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $9}' | awk '{print $1}')"
   lastname="$(cat "$__object/explorer/userdata" | awk -F '│' '{print $10}' | awk '{$1=$1};1')"
}

validate_params() {
   if test -f "$__object/parameter/enable"; then
      local enable_value="$(cat "$__object/parameter/enable")"

      if test "$enable_value" != 0 -a "$enable_value" != 1; then
         echo "Parameter 'enable' should be 0 or 1" >&2
         exit 1
      fi
   fi

   if test -f "$__object/parameter/expire"; then
      local expire_value="$(cat "$__object/parameter/expire")"
      local expire_regex='^[0-9]+$'

      if ! [[ $expire_value =~ $expire_regex ]]; then
         echo "Parameter 'expire' should be an integer" >&2
         exit 1
      fi
   fi

   if test -f "$__object/parameter/keys"; then
      local keys_value="$(cat "$__object/parameter/keys")"
      local keys_regex='^[0-9a-zA-Z!=]{0,4096}$'

      if ! [[ $keys_value =~ $keys_regex ]]; then
         echo "Parameter 'keys' should match [0-9a-zA-Z!=]{0,4096}" >&2
         exit 1
      fi
   fi
}

generate_arguments() {
   local args

   for parameter in comment email enable expire firstname groups keys lastname; do
      if test -f "$__object/parameter/$parameter"; then
         local param_should="$(cat "$__object/parameter/$parameter")"
         local param_is="${!parameter}"

         if test "$param_should" != "$param_is"; then
            args="$args --$parameter '$param_should'"
         fi
      fi
   done

   echo "$args"
}

if [ -f "$__object/parameter/userid" ]; then
   userid="$(cat "$__object/parameter/userid")"
else
   userid="$__object_id"
fi

state_should="$(cat "$__object/parameter/state")"
state_is="$(test -n "$(cat $__object/explorer/userdata)" && echo 'present' || echo 'absent')"

if test "$state_should" = 'present'; then
   generate_explorers
   validate_params

   arguments="$(generate_arguments)"

   if test "$state_is" = 'absent'; then
      echo "pveum user add $userid $arguments"
   else
      test -n "$arguments" && echo "pveum user modify $userid $arguments"
   fi
else
   if test "$state_is" = 'present'; then
      echo "pveum user delete $userid"
   fi
fi

exit 0
